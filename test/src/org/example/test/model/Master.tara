dsl Ness

Entity Configuration as Abstract
	Attribute configId as String

Entity Installation as ExtensionOf(Configuration)
	Attribute name as String
	Attribute type as Word("Videometry" "WeatherStation")
	Attribute place as Struct(GeoPoint)
	Attribute placeList as Struct(GeoPoint) List
	Attribute en as Word("A" "B")
	Attribute enList as Word("A" "B" "C") List
	Attribute url as String

Entity Zone as ExtensionOf(Configuration)
	Attribute name as String
	//TODO
	//Attribute place as Struct(GeoPoint) List
	Attribute place as Struct(GeoPoint) List
	Attribute ownerZone as Entity(Zone)
	Attribute childZones as Entity(Zone) List
	Attribute sensorIds as Entity(Installation) List
	//TODO
	Attribute associatedKpis as Word("A" "B" "C") Set

Entity AlertConfiguration as ExtensionOf(Configuration)
	Attribute entityId as String
	Attribute type as Word("BeachSandOccupancy" "DrySandArea" "WetSandArea" "Tide" "LostConnection")
	Attribute timeScale as Word("Minute" "Hour" "Day" "Week" "Month" "Year")
	Attribute enabledMin as Boolean
	Attribute min as Double
	Attribute enabledMax as Boolean
	Attribute max as Double
	Attribute recipients as String List


Entity Employee
	Attribute base as String
	Attribute foreman as String
	Attribute name as String Required
	Attribute phone as String
	Attribute photo as String
	Attribute role as String Required
	Attribute area as Entity(Area) // Area es el id del area, pero a la hora de obtenerlo se devuelve el objeto
	Attribute email as String Required
	Attribute language as String
	Attribute date as Date
	Attribute datetime as DateTime("dd/MM/yyyy HH:mm:ss")
	Attribute ins as Instant
	Attribute map as Map
		Key key as String
		Value value as Integer

Entity Place as Abstract

Entity Country as ExtensionOf(Place)
	Attribute name as String
	Attribute language as String
	Attribute dst as Struct(Dst)
	Attribute hasDst as Boolean

Struct Dst
	Attribute from as String
	Attribute to as String

Entity Area as ExtensionOf(Place)
	Attribute type as Word("inner" "outer")

Entity Region as ExtensionOf(Place)
	Attribute name as String
	Attribute country as Entity(Country)
	Attribute timeOffset as Double
	Attribute hasDst as Boolean
//	Attribute timeOffsetHours as Function -> Integer
//	Attribute timeOffsetMinutes as Function -> Integer
//	Attribute timeOffsetOn as Function(date as Date) -> Double

Struct GeoPoint
	Attribute latitude as Double
	Attribute longitude as Double
//	Attribute distanceTo as Function(point as GeoPoint) -> Integer

Entity Theater as ExtensionOf(Place)
	Attribute address as String
    Attribute city as String
    Attribute coordinates as Struct(GeoPoint)
    Attribute email as String
    Attribute exhibitor as String
    Attribute idVista as String
    Attribute manager as String
    Attribute name as String
    Attribute postalCode as String
    Attribute region as Entity(Region)
    Attribute screens as String
    Attribute ipOrder as String
    Attribute ipSegment as String Optional
    Attribute ipTms as String
    Attribute shared as String
    Attribute telephone as String
    Attribute territory as String
    Attribute type as String
    Attribute area as Entity(Area)
    Attribute enabled as Boolean(defaultValue= true)
//    Attribute screenList as Function -> Entity(Screen) List

Entity Screen as ExtensionOf(Place)
	Attribute theater as Entity(Theater)
	Attribute seats as Integer
	Attribute ipOffset as Integer
	Attribute optimized as Boolean(defaultValue = false)
	Attribute type as Word("STANDARD" "LED" "LASER" "MACRO_XE" "IMAX" "VR", defaultValue = "STANDARD")
	Attribute tech3D as Word("IMAX" "IMAXbarco" "IMAXchristie" "REALD")
	Attribute tech4D as Word("_4DX")
	Attribute setup as Word("STANDARD" "JUNIOR" "PREMIUM", defaultValue = "STANDARD")
	Attribute screenDocks as Entity(ScreenDock) List
	Attribute twin as String

Entity Dock as ExtensionOf(Place)
	Attribute ip as String

Entity ScreenDock as ExtensionOf(Dock)
	Attribute screen as Entity(Screen)
	Attribute category as Word("Player" "Projector" "Lamp")
	Attribute type as Word("STANDARD" "NONE" "IMAX" "CP2000" "UNTRACEABLE" "LASER" "LED", defaultValue = "STANDARD")

Entity Depot as ExtensionOf(Place)
	Attribute name as String

Entity Office as ExtensionOf(Place)
	Attribute name as String

Entity Desk as ExtensionOf(Place)
//	Attribute office as Function -> Entity(Office)
//	Attribute theater as Function -> Entity(Theater)

Entity Asset
	Attribute sn as String
	Attribute type as String
	Attribute model as String
	Attribute warranty as String
	Attribute place as Entity(Place)
	Attribute status as Word("Delivering" "Delivered" "Installed")
//	Attribute isGhost as Function -> Bool

Entity DualAsset as ExtensionOf(Asset)
//	Attribute assets as Function
//		===
//			public List<Asset> assets() {
//				return null;
//			}
//		===
//	Attribute missingAssets as String List
//	Attribute attribute as Function(key as String) -> String

Entity CheckField as Component
	Attribute name as String
	Attribute type as Word("String" "Number" "Date" "Option" "MultiOption" "Image" "Entity" "Package" "Note" "Marker" "Section" "Validation" "Signature")
	Attribute code as String
	Attribute optional as Boolean
	Attribute conditional as String

Entity OrderType
	Attribute code as String
    Attribute labelEn as String
    Attribute labelEs as String
    Attribute labelPt as String
    Attribute hintEn as String
    Attribute hintEs as String
    Attribute hintPt as String
    Attribute target as Word("theater" "screen" "lamp" "projector" "player")
    Attribute effort as Integer
    Attribute input as String
    Attribute calculations as String
    Attribute annexes as String
    Attribute channel as Word("web" "app" "both")
    Attribute assertionCode as String
    Attribute parent as String
    Attribute checklist as Entity(CheckField) List
    Attribute singleCheck as Entity(CheckField)
    Attribute booleanList as Boolean List
    Attribute intList as Integer List
    Attribute doubleList as Double List
    Attribute stringList as String List
    Attribute entityList as Entity(Theater) List
