dsl Proteo

use Model

Concept:Named Entity
	var Datalake.Tank.Message from = empty // TODO: OR add rule mustBeAssertion
	var string id = empty
	has Struct
	Concept:Named:RequiresAspect Attribute extends EntityData
	Concept:Named:RequiresAspect Method extends Expression
	Aspect ExtensionOf > var Entity entity
	Aspect Abstract
		var Datalake.Tank.Message from = empty is private final
	Aspect Decorable

Concept:Named Struct
	var boolean multiple = true
	Concept:Named:RequiresAspect Attribute extends EntityData
	Concept:Named:RequiresAspect Method extends Expression
	has Struct
//	Aspect ExtensionOf > var Struct struct

Concept Expression is abstract
	Aspect Private
	Aspect Getter
		var string expression
		sub DoubleGetter
		sub IntegerGetter
		sub LongGetter
		sub BooleanGetter
		sub StringGetter
		sub DateGetter
		sub DateTimeGetter
		sub InstantGetter
	Aspect Function
		var string expression
		Concept:{1..1}:RequiresAspect ReturnType extends EntityData
   		Concept:Named:RequiresAspect Parameter extends EntityData
	Aspect Routine
		var string expression
   		Concept:Named:RequiresAspect Parameter extends EntityData

Concept EntityData is abstract
	Aspect List
	Aspect Set
	Aspect Type
		var string type is reactive private
		sub Double
			var double defaultValue = empty
		sub Integer
			var integer defaultValue = empty
		sub Long
			var long defaultValue = empty
		sub Boolean
			var boolean defaultValue = empty
		sub String
			var string defaultValue = empty
		sub Date
			var string format = "dd/MM/yyyy"
		sub DateTime
			var string format = "dd/MM/yyyy HH:mm:ss"
		sub Instant
			var instant defaultValue = empty
		sub Word
			var string[] values
			var string defaultValue= empty
		sub Struct
			var Entities.Struct struct
		sub Entity
			var Entities.Entity entity
		sub Map
			var string type = "java.util.Map" is reactive private
