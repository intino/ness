def type(accessor)
	package $package+validPackage;

	import $package+validPackage.schemas.*;
	import java.util.List;

	public class $name+snakeCaseToCamelCase+firstUpperCase {

		private final io.intino.alexandria.message.MessageHub messageHub;

		public $name+snakeCaseToCamelCase+firstUpperCase(io.intino.alexandria.message.MessageHub messageHub) {
			this.messageHub = messageHub;
		}

		$publish...[$NL$NL]

		$subscribe...[$NL$NL]
	}
end

def type(contextual) trigger(publish)
	$context+publish...[$NL$NL]
end

def type(context) trigger(publish)
	public void sendTo$context($type+FirstUpperCase $type+firstLowerCase) {
		messageHub.sendMessage("$channel", $type+firstLowerCase.get());
	}
end

def type(contextual) trigger(subscribe)
	$context+subscribe...[$NL$NL]
end


def type(context) trigger(subscribe)
	public void subscribeTo$context+FirstUpperCase(java.util.function.Consumer<$type+FirstUpperCase> onMessageReceived) {
		messageHub.attachListener("$channel", m -> onMessageReceived.accept(new $type+FirstUpperCase(m)));
	}
end

def trigger(subscribe)
	public void subscribeTo$type+FirstUpperCase(java.util.function.Consumer<$type+FirstUpperCase> onMessageReceived) {
		messageHub.attachListener("$channel", m -> onMessageReceived.accept(new $type+FirstUpperCase(m)));
	}
end

def trigger(publish)
	public void send($type+FirstUpperCase $type+firstLowerCase) {
		messageHub.sendMessage("$channel", $type+firstLowerCase.get());
	}
end