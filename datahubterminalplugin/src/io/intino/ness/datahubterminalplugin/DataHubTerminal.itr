def type(accessor)
	package $package+validPackage;

	import $package+validPackage.schemas.*;
	import java.util.List;

	public class $name+snakeCaseToCamelCase+firstUpperCase {

		private final io.intino.alexandria.messagehub.JmsMessageHub messageHub;

		public static String$[] subscriptionChannels = new String$[]{$subscribe+channel};

		public $name+snakeCaseToCamelCase+firstUpperCase(io.intino.alexandria.messagehub.JmsMessageHub messageHub) {
			this.messageHub = messageHub;
		}

		public io.intino.alexandria.messagehub.JmsMessageHub messageHub() {
			return this.messageHub;
		}

		$publish...[$NL$NL]

		$subscribe...[$NL$NL]

		public void stop() {
			messageHub.stop();
		}
	}
end

def type(contextual) trigger(publish)
	$context+publish...[$NL$NL]
end

def type(context) trigger(publish)
	public void sendTo$context($type+FirstUpperCase $type+firstLowerCase) {
		messageHub.sendMessage("$channel", $type+firstLowerCase.get());
	}
end

def type(contextual) trigger(subscribe)
	$context+subscribe...[$NL$NL]
end


def type(context) trigger(subscribe)
	public void subscribeTo$context+FirstUpperCase$type+FirstUpperCase(java.util.function.Consumer<$type+FirstUpperCase> onMessageReceived) {
		messageHub.attachListener("$channel", m -> onMessageReceived.accept(new $type+FirstUpperCase(m)));
	}
end

def trigger(subscribe)
	public void subscribeTo$type+FirstUpperCase$type+FirstUpperCase(java.util.function.Consumer<$type+FirstUpperCase> onMessageReceived) {
		messageHub.attachListener("$channel", m -> onMessageReceived.accept(new $type+FirstUpperCase(m)));
	}
end

def trigger(publish)
	public void send($type+FirstUpperCase $type+firstLowerCase) {
		messageHub.sendMessage("$channel", $type+firstLowerCase.get());
	}
end

def trigger(quoted)
	"$this"
end