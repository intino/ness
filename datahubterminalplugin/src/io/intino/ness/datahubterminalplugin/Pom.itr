def type(pom)
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>$group+lowercase</groupId>
	<artifactId>$artifact+lowercase</artifactId>
	<version>$version</version>
	[<licenses>
		$license...[$NL]
	</licenses>]
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<outputDirectory>out/production/$artifact+lowercase</outputDirectory>
		<testOutputDirectory>out/test/$artifact+lowercase</testOutputDirectory>
		<directory>out/build/$artifact+lowercase</directory>
		<resources>
			<resource>
				<directory>$${basedir}/res</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								$sourceDirectory...[$NL]
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		$repository+release...[$NL]
		<repository>
			<id>intino-maven</id>
			<name>intino-maven-releases</name>
			<url>https://artifactory.intino.io/artifactory/releases</url>
		</repository>
	</repositories>

	<distributionManagement>
		$repository+distribution...[$NL]
	</distributionManagement>

	<dependencies>
		[$event]
		[$terminal]
		[$bpm]
		[$master]
	</dependencies>
</project>
end

def trigger(event)
	<dependency>
		<groupId>io.intino.alexandria</groupId>
		<artifactId>event</artifactId>
		<version>$version</version>
	</dependency>
end


def trigger(terminal)
	<dependency>
		<groupId>io.intino.alexandria</groupId>
		<artifactId>terminal-jms</artifactId>
		<version>$terminalVersion</version>
	</dependency>
	<dependency>
		<groupId>io.intino.alexandria</groupId>
		<artifactId>ingestion</artifactId>
		<version>$ingestionVersion</version>
	</dependency>
	<dependency>
		<groupId>io.intino.alexandria</groupId>
		<artifactId>datalake</artifactId>
		<version>4.0.5</version>
	</dependency>
	<dependency>
		<groupId>$group+lowercase</groupId>
		<artifactId>$artifact+lowercase</artifactId>
		<version>$version</version>
	</dependency>
end

def type(repository & distribution) trigger(distribution)
	<repository>
		<id>$name</id>
		<name>$name</name>
		<url>$url</url>
	</repository>
end

def trigger(distribution)
end

def trigger(bpm)
	<dependency>
		<groupId>io.intino.alexandria</groupId>
		<artifactId>bpm-framework</artifactId>
		<version>$this</version>
		<scope>provided</scope>
	</dependency>
end

def trigger(master)
	<dependency>
		<groupId>io.intino.ness</groupId>
		<artifactId>master</artifactId>
		<version>$masterVersion</version>
	</dependency>
	<dependency>
    	<groupId>io.intino.alexandria</groupId>
    	<artifactId>terminal-jms</artifactId>
    	<version>$terminalVersion</version>
    </dependency>
end

def type(repository) !type(distribution) trigger(release)
	<repository>
		<id>$name-~$random</id>
		<url>$url</url>
	</repository>
end


def type(GPL) trigger(license)
	<license>
		<name>The GNU General Public License v3.0</name>
		<url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
	</license>
end

def type(BSD) trigger(license)
	<license>
		<name>BSD 3-Clause License</name>
		<url>https://opensource.org/licenses/BSD-3-Clause</url>
	</license>
end


def trigger(sourceDirectory)
	<source>$this</source>
end