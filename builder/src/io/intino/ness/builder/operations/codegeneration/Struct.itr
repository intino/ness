def type(struct)
	package $package.structs;

	import java.util.Objects;

	public class $name+FirstUpperCase {

		$attribute+field...[$NL]

		public $name+FirstUpperCase($attribute+parameter...[, ]) {
			$attribute+assign...[$NL]
		}

		$attribute+getter...[$NL$NL]

		@Override
		public boolean equals(Object obj) {
			if(obj == null) return false;
			if(!obj.getClass().equals(getClass())) return false;
			$name+FirstUpperCase other = ($name+FirstUpperCase) obj;
			return $attribute+equals...[ && ];
		}

		@Override
        public int hashCode() {
        	return Objects.hash($attribute...[, ]);
        }

		@Override
		public String toString() {
			StringBuilder sb = new StringBuilder("$name+FirstUpperCase {");
			$attribute+toString...[$NL]
			sb.delete(sb.length() - ", ".length(), sb.length());
			return sb.append("}").toString();
		}
	}
end

def trigger(getter)
	public $type $name+firstLowerCase() {
		return $name+firstLowerCase;
	}
end

def trigger(assign)
	this.$name+firstLowerCase = $name+firstLowerCase;
end

def trigger(field)
	private final $type $name+firstLowerCase;
end

def trigger(parameter)
	$type $name+firstLowerCase
end

def trigger(equals)
	Objects.equals(this.$name+firstLowerCase, other.$name+firstLowerCase)
end

def trigger(toString)
	sb.append("$name+firstLowerCase=").append(this.$name+firstLowerCase).append(", ");
end

def type(attribute)
	this.$name+firstLowerCase
end